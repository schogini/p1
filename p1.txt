node {  
  stage 'Checkout'
  git url: 'https://github.com/papaludwig/jenkins-docker-example.git'  

  stage 'Build'
  docker.build('mobycounter')  

  stage 'Deploy'  
  sh './deploy.sh'
}



node {  
  stage 'Checkout'
  git url: 'https://github.com/schogini/p1.git'  

  stage 'Build' 
  def customImage = docker.build("my-image:${env.BUILD_ID}")
  // #https://www.jenkins.io/doc/book/pipeline/docker/
  // #def customImage = docker.build("my-image:${env.BUILD_ID}", "-f ${dockerfile} ./dockerfiles")

  stage 'Test' 
    sh "./t1.sh ${env.BUILD_ID} my-image:${env.BUILD_ID}"

   stage('Test2') {

        when {
            // Only say hello if a "greeting" is requested
            // expression { params.REQUESTED_ACTION == 'greeting' }
            echo 'Hello World'
        }
                
        steps {
            // echo 'Hello World'
            aa = sh "./t1.sh ${env.BUILD_ID} my-image:${env.BUILD_ID}"
        }
    }

}
node {  
  stage 'Checkout'
  	git url: 'https://github.com/schogini/p1.git'  

  stage 'Build' 
  	docker.build("my-image:${env.BUILD_ID}")

  stage 'Test' 
    sh "./t1.sh ${env.BUILD_ID} my-image:${env.BUILD_ID}" > test.txt

   stage('Test2') {
   			sh "cat test.txt"
            echo "Hello World2"
    }
}






pipeline {
    agent any
    parameters {

    }
    stages {
	    stage('Checkout') {
	        git url: 'https://github.com/schogini/p1.git'
	    }
        stage ('Build') {
        	docker.build("my-image:${env.BUILD_ID}")
        }
        stage ('Test') {
            when {
                // expression { params.REQUESTED_ACTION == 'greeting' }
                // expression { return readFile('pom.xml').contains('mycomponent') }
            }
            steps {
                echo "Hello1!"
            }
        }
    }
}
